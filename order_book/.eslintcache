[{"C:\\Users\\Patron\\Documents\\Apps\\order_book_viewer\\order_book\\src\\index.js":"1","C:\\Users\\Patron\\Documents\\Apps\\order_book_viewer\\order_book\\src\\App.js":"2","C:\\Users\\Patron\\Documents\\Apps\\order_book_viewer\\order_book\\src\\reportWebVitals.js":"3","C:\\Users\\Patron\\Documents\\Apps\\order_book_viewer\\order_book\\src\\components\\BookColumn.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":4090,"mtime":1606881567035,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":308,"mtime":1606881269612,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"yqu4im",{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Patron\\Documents\\Apps\\order_book_viewer\\order_book\\src\\index.js",[],["20","21"],"C:\\Users\\Patron\\Documents\\Apps\\order_book_viewer\\order_book\\src\\App.js",["22","23","24","25"],"import BookColumn from './components/BookColumn';\nimport React, { useState, useEffect, useRef } from'react';\nimport './App.css';\n\n\n\n\n\nfunction App() {\n  const currencyPair = \"BTC-USD\";\n  const ws = new useRef(null);\n  const [bidData, setBidData] = useState([]);\n  const [askData, setAskData] = useState([]);\n  const [tool, setTool] = useState(\"\");\n  let asks = [];\n  let bids = [];\n  \n  /**\n   * Open the connection to the web socket\n   */\n  useEffect(() => {\n    ws.current = new WebSocket('wss://ws-feed.pro.coinbase.com');\n    ws.current.onclose = () => {\n      console.log(\"CLOSING\");\n    }\n    return () => { //Close on cleanup\n      ws.current.close();\n    }\n  }, [ws]);\n\n  /**\n   * Maintain the bid and ask price lists\n   */\n  useEffect(() => {\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({\n        type: 'subscribe',\n        product_ids: [\n            currencyPair,\n        ],\n        channels: [\n            'level2',\n        ],\n    }));\n    }\n\n    ws.current.onmessage = (e) => {\n      let parsedMsg = JSON.parse(e.data);\n\n      //Deep copy\n      asks = askData.slice();\n      bids = bidData.slice();\n\n      if(parsedMsg.type === \"snapshot\") { //Build initial orderbook\n        for(let ask of parsedMsg.asks) {\n            asks[asks.length] = {\n                price: Number(ask[0]),\n                quantity: Number(ask[1]),\n            };\n        }\n\n        for(let bid of parsedMsg.bids) {\n            bids[bids.length] = {\n                price: Number(bid[0]),\n                quantity: Number(bid[1]),\n            };\n        }\n    } else if (parsedMsg.type === \"l2update\") {\n        if(parsedMsg.changes[0][0] === \"buy\") { //Update bid prices\n            let bidPriceAffected = Number(parsedMsg.changes[0][1]);\n            let newBidQuantity = Number(parsedMsg.changes[0][2]);\n            for(let i = 0; i < bids.length; i++) {\n                if(bids[i].price === bidPriceAffected && newBidQuantity === 0) { //Eliminate a price\n\n                    bids.splice(i, 1);\n                    break;\n                } else if (bids[i].price === bidPriceAffected && newBidQuantity !== 0) { //Update a price\n\n                    bids[i].quantity = newBidQuantity;\n                    break;\n                } else if (bidPriceAffected > bids[i].price && newBidQuantity !== 0) { //Insert a price\n                    bids.splice(i, 0, {\n                        price: bidPriceAffected,\n                        quantity: newBidQuantity,\n                    });\n                    break;\n                }\n            }\n        } else if (parsedMsg.changes[0][0] === \"sell\") { //Update ask prices\n            let askPriceAffected = Number(parsedMsg.changes[0][1]);\n            let newAskQuantity = Number(parsedMsg.changes[0][2]);\n            for(let i = 0; i < asks.length; i++) {\n                if(asks[i].price === askPriceAffected && newAskQuantity === 0) { //Eliminate a price\n                    asks.splice(i, 1);\n                    break;\n                } else if (asks[i].price === askPriceAffected && newAskQuantity !== 0) { //Update a price\n                    asks[i].quantity = newAskQuantity;\n                    break;\n                } else if (askPriceAffected < asks[i].price && newAskQuantity !== 0) { //Insert a price\n                    asks.splice(i, 0, {\n                        price: askPriceAffected,\n                        quantity: newAskQuantity,\n                    });\n                    break;\n                }\n            }\n        }\n      }\n      setBidData(bids);\n      setAskData(asks);\n      \n      setTool(\"\");\n    }\n  }, [tool,asks,bids,ws]);\n\n\n  const disp = () => {\n    console.log(bidData[0]);\n  }\n  return (\n    <div className=\"App\">\n      <h1>Order Book { currencyPair }</h1>\n      <div style = { { display: 'inline-block', 'margin-right': '10%', } }>\n        <BookColumn color = 'green' list = { bidData.slice(0,20) } />\n      </div>\n      <div style = { { display: 'inline-block' } } >\n        <BookColumn color = 'red' list = { askData.slice(0,20) } />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Patron\\Documents\\Apps\\order_book_viewer\\order_book\\src\\reportWebVitals.js",[],"C:\\Users\\Patron\\Documents\\Apps\\order_book_viewer\\order_book\\src\\components\\BookColumn.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":11,"column":9,"nodeType":"32","endLine":11,"endColumn":30},{"ruleId":"30","severity":1,"message":"33","line":51,"column":14,"nodeType":"34","endLine":51,"endColumn":29},{"ruleId":"30","severity":1,"message":"35","line":52,"column":14,"nodeType":"34","endLine":52,"endColumn":29},{"ruleId":"36","severity":1,"message":"37","line":117,"column":9,"nodeType":"38","messageId":"39","endLine":117,"endColumn":13},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"react-hooks/exhaustive-deps","The 'ws' object construction makes the dependencies of useEffect Hook (at line 29) change on every render. To fix this, wrap the initialization of 'ws' in its own useMemo() Hook.","VariableDeclarator","Assignments to the 'asks' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'bids' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-unused-vars","'disp' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]